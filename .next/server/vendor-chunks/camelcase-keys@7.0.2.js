"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/camelcase-keys@7.0.2";
exports.ids = ["vendor-chunks/camelcase-keys@7.0.2"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/camelcase-keys@7.0.2/node_modules/camelcase-keys/index.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/camelcase-keys@7.0.2/node_modules/camelcase-keys/index.js ***!
  \**************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst mapObj = __webpack_require__(/*! map-obj */ \"(rsc)/./node_modules/.pnpm/map-obj@4.3.0/node_modules/map-obj/index.js\");\nconst camelCase = __webpack_require__(/*! camelcase */ \"(rsc)/./node_modules/.pnpm/camelcase@6.3.0/node_modules/camelcase/index.js\");\nconst QuickLru = __webpack_require__(/*! quick-lru */ \"(rsc)/./node_modules/.pnpm/quick-lru@5.1.1/node_modules/quick-lru/index.js\");\nconst has = (array, key)=>array.some((x)=>{\n        if (typeof x === \"string\") {\n            return x === key;\n        }\n        x.lastIndex = 0;\n        return x.test(key);\n    });\nconst cache = new QuickLru({\n    maxSize: 100000\n});\n// Reproduces behavior from `map-obj`\nconst isObject = (value)=>typeof value === \"object\" && value !== null && !(value instanceof RegExp) && !(value instanceof Error) && !(value instanceof Date);\nconst camelCaseConvert = (input, options)=>{\n    if (!isObject(input)) {\n        return input;\n    }\n    options = {\n        deep: false,\n        pascalCase: false,\n        ...options\n    };\n    const { exclude, pascalCase, stopPaths, deep } = options;\n    const stopPathsSet = new Set(stopPaths);\n    const makeMapper = (parentPath)=>(key, value)=>{\n            if (deep && isObject(value)) {\n                const path = parentPath === undefined ? key : `${parentPath}.${key}`;\n                if (!stopPathsSet.has(path)) {\n                    value = mapObj(value, makeMapper(path));\n                }\n            }\n            if (!(exclude && has(exclude, key))) {\n                const cacheKey = pascalCase ? `${key}_` : key;\n                if (cache.has(cacheKey)) {\n                    key = cache.get(cacheKey);\n                } else {\n                    const returnValue = camelCase(key, {\n                        pascalCase,\n                        locale: false\n                    });\n                    if (key.length < 100) {\n                        cache.set(cacheKey, returnValue);\n                    }\n                    key = returnValue;\n                }\n            }\n            return [\n                key,\n                value\n            ];\n        };\n    return mapObj(input, makeMapper(undefined));\n};\nmodule.exports = (input, options)=>{\n    if (Array.isArray(input)) {\n        return Object.keys(input).map((key)=>camelCaseConvert(input[key], options));\n    }\n    return camelCaseConvert(input, options);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vY2FtZWxjYXNlLWtleXNANy4wLjIvbm9kZV9tb2R1bGVzL2NhbWVsY2FzZS1rZXlzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsTUFBTUEsU0FBU0MsbUJBQU9BLENBQUM7QUFDdkIsTUFBTUMsWUFBWUQsbUJBQU9BLENBQUM7QUFDMUIsTUFBTUUsV0FBV0YsbUJBQU9BLENBQUM7QUFFekIsTUFBTUcsTUFBTSxDQUFDQyxPQUFPQyxNQUFRRCxNQUFNRSxJQUFJLENBQUNDLENBQUFBO1FBQ3RDLElBQUksT0FBT0EsTUFBTSxVQUFVO1lBQzFCLE9BQU9BLE1BQU1GO1FBQ2Q7UUFFQUUsRUFBRUMsU0FBUyxHQUFHO1FBQ2QsT0FBT0QsRUFBRUUsSUFBSSxDQUFDSjtJQUNmO0FBRUEsTUFBTUssUUFBUSxJQUFJUixTQUFTO0lBQUNTLFNBQVM7QUFBTTtBQUUzQyxxQ0FBcUM7QUFDckMsTUFBTUMsV0FBV0MsQ0FBQUEsUUFDaEIsT0FBT0EsVUFBVSxZQUNqQkEsVUFBVSxRQUNWLENBQUVBLENBQUFBLGlCQUFpQkMsTUFBSyxLQUN4QixDQUFFRCxDQUFBQSxpQkFBaUJFLEtBQUksS0FDdkIsQ0FBRUYsQ0FBQUEsaUJBQWlCRyxJQUFHO0FBRXZCLE1BQU1DLG1CQUFtQixDQUFDQyxPQUFPQztJQUNoQyxJQUFJLENBQUNQLFNBQVNNLFFBQVE7UUFDckIsT0FBT0E7SUFDUjtJQUVBQyxVQUFVO1FBQ1RDLE1BQU07UUFDTkMsWUFBWTtRQUNaLEdBQUdGLE9BQU87SUFDWDtJQUVBLE1BQU0sRUFBQ0csT0FBTyxFQUFFRCxVQUFVLEVBQUVFLFNBQVMsRUFBRUgsSUFBSSxFQUFDLEdBQUdEO0lBRS9DLE1BQU1LLGVBQWUsSUFBSUMsSUFBSUY7SUFFN0IsTUFBTUcsYUFBYUMsQ0FBQUEsYUFBYyxDQUFDdEIsS0FBS1E7WUFDdEMsSUFBSU8sUUFBUVIsU0FBU0MsUUFBUTtnQkFDNUIsTUFBTWUsT0FBT0QsZUFBZUUsWUFBWXhCLE1BQU0sQ0FBQyxFQUFFc0IsV0FBVyxDQUFDLEVBQUV0QixJQUFJLENBQUM7Z0JBRXBFLElBQUksQ0FBQ21CLGFBQWFyQixHQUFHLENBQUN5QixPQUFPO29CQUM1QmYsUUFBUWQsT0FBT2MsT0FBT2EsV0FBV0U7Z0JBQ2xDO1lBQ0Q7WUFFQSxJQUFJLENBQUVOLENBQUFBLFdBQVduQixJQUFJbUIsU0FBU2pCLElBQUcsR0FBSTtnQkFDcEMsTUFBTXlCLFdBQVdULGFBQWEsQ0FBQyxFQUFFaEIsSUFBSSxDQUFDLENBQUMsR0FBR0E7Z0JBRTFDLElBQUlLLE1BQU1QLEdBQUcsQ0FBQzJCLFdBQVc7b0JBQ3hCekIsTUFBTUssTUFBTXFCLEdBQUcsQ0FBQ0Q7Z0JBQ2pCLE9BQU87b0JBQ04sTUFBTUUsY0FBYy9CLFVBQVVJLEtBQUs7d0JBQUNnQjt3QkFBWVksUUFBUTtvQkFBSztvQkFFN0QsSUFBSTVCLElBQUk2QixNQUFNLEdBQUcsS0FBSzt3QkFDckJ4QixNQUFNeUIsR0FBRyxDQUFDTCxVQUFVRTtvQkFDckI7b0JBRUEzQixNQUFNMkI7Z0JBQ1A7WUFDRDtZQUVBLE9BQU87Z0JBQUMzQjtnQkFBS1E7YUFBTTtRQUNwQjtJQUVBLE9BQU9kLE9BQU9tQixPQUFPUSxXQUFXRztBQUNqQztBQUVBTyxPQUFPQyxPQUFPLEdBQUcsQ0FBQ25CLE9BQU9DO0lBQ3hCLElBQUltQixNQUFNQyxPQUFPLENBQUNyQixRQUFRO1FBQ3pCLE9BQU9zQixPQUFPQyxJQUFJLENBQUN2QixPQUFPd0IsR0FBRyxDQUFDckMsQ0FBQUEsTUFBT1ksaUJBQWlCQyxLQUFLLENBQUNiLElBQUksRUFBRWM7SUFDbkU7SUFFQSxPQUFPRixpQkFBaUJDLE9BQU9DO0FBQ2hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktYXBwLy4vbm9kZV9tb2R1bGVzLy5wbnBtL2NhbWVsY2FzZS1rZXlzQDcuMC4yL25vZGVfbW9kdWxlcy9jYW1lbGNhc2Uta2V5cy9pbmRleC5qcz8wODQzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbmNvbnN0IG1hcE9iaiA9IHJlcXVpcmUoJ21hcC1vYmonKTtcbmNvbnN0IGNhbWVsQ2FzZSA9IHJlcXVpcmUoJ2NhbWVsY2FzZScpO1xuY29uc3QgUXVpY2tMcnUgPSByZXF1aXJlKCdxdWljay1scnUnKTtcblxuY29uc3QgaGFzID0gKGFycmF5LCBrZXkpID0+IGFycmF5LnNvbWUoeCA9PiB7XG5cdGlmICh0eXBlb2YgeCA9PT0gJ3N0cmluZycpIHtcblx0XHRyZXR1cm4geCA9PT0ga2V5O1xuXHR9XG5cblx0eC5sYXN0SW5kZXggPSAwO1xuXHRyZXR1cm4geC50ZXN0KGtleSk7XG59KTtcblxuY29uc3QgY2FjaGUgPSBuZXcgUXVpY2tMcnUoe21heFNpemU6IDEwMDAwMH0pO1xuXG4vLyBSZXByb2R1Y2VzIGJlaGF2aW9yIGZyb20gYG1hcC1vYmpgXG5jb25zdCBpc09iamVjdCA9IHZhbHVlID0+XG5cdHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiZcblx0dmFsdWUgIT09IG51bGwgJiZcblx0ISh2YWx1ZSBpbnN0YW5jZW9mIFJlZ0V4cCkgJiZcblx0ISh2YWx1ZSBpbnN0YW5jZW9mIEVycm9yKSAmJlxuXHQhKHZhbHVlIGluc3RhbmNlb2YgRGF0ZSk7XG5cbmNvbnN0IGNhbWVsQ2FzZUNvbnZlcnQgPSAoaW5wdXQsIG9wdGlvbnMpID0+IHtcblx0aWYgKCFpc09iamVjdChpbnB1dCkpIHtcblx0XHRyZXR1cm4gaW5wdXQ7XG5cdH1cblxuXHRvcHRpb25zID0ge1xuXHRcdGRlZXA6IGZhbHNlLFxuXHRcdHBhc2NhbENhc2U6IGZhbHNlLFxuXHRcdC4uLm9wdGlvbnNcblx0fTtcblxuXHRjb25zdCB7ZXhjbHVkZSwgcGFzY2FsQ2FzZSwgc3RvcFBhdGhzLCBkZWVwfSA9IG9wdGlvbnM7XG5cblx0Y29uc3Qgc3RvcFBhdGhzU2V0ID0gbmV3IFNldChzdG9wUGF0aHMpO1xuXG5cdGNvbnN0IG1ha2VNYXBwZXIgPSBwYXJlbnRQYXRoID0+IChrZXksIHZhbHVlKSA9PiB7XG5cdFx0aWYgKGRlZXAgJiYgaXNPYmplY3QodmFsdWUpKSB7XG5cdFx0XHRjb25zdCBwYXRoID0gcGFyZW50UGF0aCA9PT0gdW5kZWZpbmVkID8ga2V5IDogYCR7cGFyZW50UGF0aH0uJHtrZXl9YDtcblxuXHRcdFx0aWYgKCFzdG9wUGF0aHNTZXQuaGFzKHBhdGgpKSB7XG5cdFx0XHRcdHZhbHVlID0gbWFwT2JqKHZhbHVlLCBtYWtlTWFwcGVyKHBhdGgpKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoIShleGNsdWRlICYmIGhhcyhleGNsdWRlLCBrZXkpKSkge1xuXHRcdFx0Y29uc3QgY2FjaGVLZXkgPSBwYXNjYWxDYXNlID8gYCR7a2V5fV9gIDoga2V5O1xuXG5cdFx0XHRpZiAoY2FjaGUuaGFzKGNhY2hlS2V5KSkge1xuXHRcdFx0XHRrZXkgPSBjYWNoZS5nZXQoY2FjaGVLZXkpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Y29uc3QgcmV0dXJuVmFsdWUgPSBjYW1lbENhc2Uoa2V5LCB7cGFzY2FsQ2FzZSwgbG9jYWxlOiBmYWxzZX0pO1xuXG5cdFx0XHRcdGlmIChrZXkubGVuZ3RoIDwgMTAwKSB7IC8vIFByZXZlbnQgYWJ1c2Vcblx0XHRcdFx0XHRjYWNoZS5zZXQoY2FjaGVLZXksIHJldHVyblZhbHVlKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGtleSA9IHJldHVyblZhbHVlO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBba2V5LCB2YWx1ZV07XG5cdH07XG5cblx0cmV0dXJuIG1hcE9iaihpbnB1dCwgbWFrZU1hcHBlcih1bmRlZmluZWQpKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gKGlucHV0LCBvcHRpb25zKSA9PiB7XG5cdGlmIChBcnJheS5pc0FycmF5KGlucHV0KSkge1xuXHRcdHJldHVybiBPYmplY3Qua2V5cyhpbnB1dCkubWFwKGtleSA9PiBjYW1lbENhc2VDb252ZXJ0KGlucHV0W2tleV0sIG9wdGlvbnMpKTtcblx0fVxuXG5cdHJldHVybiBjYW1lbENhc2VDb252ZXJ0KGlucHV0LCBvcHRpb25zKTtcbn07XG4iXSwibmFtZXMiOlsibWFwT2JqIiwicmVxdWlyZSIsImNhbWVsQ2FzZSIsIlF1aWNrTHJ1IiwiaGFzIiwiYXJyYXkiLCJrZXkiLCJzb21lIiwieCIsImxhc3RJbmRleCIsInRlc3QiLCJjYWNoZSIsIm1heFNpemUiLCJpc09iamVjdCIsInZhbHVlIiwiUmVnRXhwIiwiRXJyb3IiLCJEYXRlIiwiY2FtZWxDYXNlQ29udmVydCIsImlucHV0Iiwib3B0aW9ucyIsImRlZXAiLCJwYXNjYWxDYXNlIiwiZXhjbHVkZSIsInN0b3BQYXRocyIsInN0b3BQYXRoc1NldCIsIlNldCIsIm1ha2VNYXBwZXIiLCJwYXJlbnRQYXRoIiwicGF0aCIsInVuZGVmaW5lZCIsImNhY2hlS2V5IiwiZ2V0IiwicmV0dXJuVmFsdWUiLCJsb2NhbGUiLCJsZW5ndGgiLCJzZXQiLCJtb2R1bGUiLCJleHBvcnRzIiwiQXJyYXkiLCJpc0FycmF5IiwiT2JqZWN0Iiwia2V5cyIsIm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/camelcase-keys@7.0.2/node_modules/camelcase-keys/index.js\n");

/***/ })

};
;